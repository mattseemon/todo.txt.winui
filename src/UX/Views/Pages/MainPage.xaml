<Page x:Class="Seemon.Todo.Views.Pages.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
      xmlns:i="using:Microsoft.Xaml.Interactivity"
      xmlns:helpers="using:Seemon.Todo.Helpers.Views"
      xmlns:local="using:Seemon.Todo.Models"
      xmlns:converters="using:Seemon.Todo.Helpers.Converters"
      x:Name="ThisPage"
      mc:Ignorable="d">
    <Page.Resources>
        <Style TargetType="ListViewItem" x:Key="ListViewItemStyle" BasedOn="{StaticResource DefaultListViewItemStyle}">
            <Setter Property="FontSize" Value="{x:Bind ViewModel.FontSize}" />
            <Setter Property="FontFamily" Value="{x:Bind ViewModel.Font}" />
        </Style>
        <Style TargetType="TextBlock" x:Key="ListViewHeaderTextBlockStyle" BasedOn="{StaticResource BodyStrongTextBlockStyle}">
            <Setter Property="FontFamily" Value="{x:Bind ViewModel.Font}" />
        </Style>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:EnumToDescriptionConverter x:Key="EnumToDescriptionConverter" />
    </Page.Resources>
    <Grid x:Name="ContentArea">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <SplitView Grid.Row="1" IsPaneOpen="{x:Bind ViewModel.FilterSettings.IsFiltersVisible, Mode=TwoWay}" 
                   OpenPaneLength="400" DisplayMode="Inline" PanePlacement="Right" 
                   PaneBackground="{ThemeResource SolidBackgroundFillColorBaseBrush}" 
                   BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}" BorderThickness="1 0 0 0">
            <SplitView.Pane>
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Margin="10 10 10 10" x:Name="FiltersTextBlock" Text="Filters" Style="{ThemeResource SubtitleTextBlockStyle}" />
                    <ScrollViewer Grid.Row="1" Margin="0 5 0 5">
                        <StackPanel VerticalAlignment="Stretch" Margin="10 0 10 0">
                            <TextBox Height="100" Header="Currently Active Filter:" AcceptsReturn="True" Margin="0 5 0 5" Text="{x:Bind ViewModel.FilterSettings.ActiveFilter, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                            <TextBox Height="100" Header="Preset Filter #1:" AcceptsReturn="True" Margin="0 5 0 5" Text="{x:Bind ViewModel.FilterSettings.PresetFilter1, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                            <TextBox Height="100" Header="Preset Filter #2:" AcceptsReturn="True" Margin="0 5 0 5" Text="{x:Bind ViewModel.FilterSettings.PresetFilter2, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                            <TextBox Height="100" Header="Preset Filter #3:" AcceptsReturn="True" Margin="0 5 0 5" Text="{x:Bind ViewModel.FilterSettings.PresetFilter3, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                            <TextBox Height="100" Header="Preset Filter #4:" AcceptsReturn="True" Margin="0 5 0 5" Text="{x:Bind ViewModel.FilterSettings.PresetFilter4, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                            <TextBox Height="100" Header="Preset Filter #5:" AcceptsReturn="True" Margin="0 5 0 5" Text="{x:Bind ViewModel.FilterSettings.PresetFilter5, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                            <TextBox Height="100" Header="Preset Filter #6:" AcceptsReturn="True" Margin="0 5 0 5" Text="{x:Bind ViewModel.FilterSettings.PresetFilter6, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                            <TextBox Height="100" Header="Preset Filter #7:" AcceptsReturn="True" Margin="0 5 0 5" Text="{x:Bind ViewModel.FilterSettings.PresetFilter7, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                            <TextBox Height="100" Header="Preset Filter #8:" AcceptsReturn="True" Margin="0 5 0 5" Text="{x:Bind ViewModel.FilterSettings.PresetFilter8, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                            <TextBox Height="100" Header="Preset Filter #9:" AcceptsReturn="True" Margin="0 5 0 5" Text="{x:Bind ViewModel.FilterSettings.PresetFilter9, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                        </StackPanel>
                    </ScrollViewer>
                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" Margin="10 10 10 10">
                            <Button Content="Clear Active" Width="100" Command="{x:Bind ViewModel.ClearActiveFilterCommand}" />
                            <Button Content="Clear All" Margin="5 0 0 0" Width="100" Command="{x:Bind ViewModel.ClearAllFiltersCommand}" />
                        </StackPanel>
                        <Button Grid.Row="0" Grid.Column="1" Width="100" Content="Close" HorizontalAlignment="Right" Margin="0 10 10 10" Command="{x:Bind ViewModel.CloseFilterCommand}" />
                    </Grid>
                </Grid>
            </SplitView.Pane>
            <ListView Grid.Row="1" ItemsSource="{x:Bind ViewModel.TasksCollectionView.View, Mode=OneWay}" SelectionMode="Extended"
                      Background="{ThemeResource SolidBackgroundFillColorBaseBrush}" 
                      BorderBrush="{ThemeResource CardBackgroundFillColorSecondaryBrush}" 
                      BorderThickness="0 0 0 1"
                      ScrollViewer.HorizontalScrollMode="Enabled"
                      ScrollViewer.HorizontalScrollBarVisibility="Visible"
                      ScrollViewer.IsHorizontalRailEnabled="True"
                      ScrollViewer.VerticalScrollMode="Enabled"
                      ShowsScrollingPlaceholders="True"
                      helpers:FocusHelper.IsFocused="{x:Bind ViewModel.IsTaskListFocused, Mode=OneWay}" FontFamily="{x:Bind ViewModel.Font, Mode=OneWay}" FontSize="{x:Bind ViewModel.FontSize, Mode=OneWay}">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="local:Task">
                        <ListViewItem IsSelected="{x:Bind IsSelected, Mode=TwoWay}" Style="{StaticResource ListViewItemStyle}" >
                            <TextBlock Text="{x:Bind Raw}" Margin="0 5 0 5" x:Name="TaskText" TextWrapping="Wrap">
                                <i:Interaction.Behaviors>
                                    <ic:DataTriggerBehavior Binding="{Binding IsTaskdue, Converter={StaticResource EnumToDescriptionConverter}}" ComparisonCondition="Equal" Value="Overdue">
                                        <ic:ChangePropertyAction TargetObject="{Binding ElementName=TaskText}" PropertyName="Foreground" Value="Red" />
                                    </ic:DataTriggerBehavior>
                                    <ic:DataTriggerBehavior Binding="{Binding IsTaskdue, Converter={StaticResource EnumToDescriptionConverter}}" ComparisonCondition="Equal" Value="Today">
                                        <ic:ChangePropertyAction TargetObject="{Binding ElementName=TaskText}" PropertyName="Foreground" Value="Green" />
                                    </ic:DataTriggerBehavior>
                                    <ic:DataTriggerBehavior Binding="{Binding IsCompleted}" ComparisonCondition="Equal" Value="True">
                                        <ic:ChangePropertyAction TargetObject="{Binding ElementName=TaskText}" PropertyName="TextDecorations" Value="Strikethrough" />
                                        <ic:ChangePropertyAction TargetObject="{Binding ElementName=TaskText}" PropertyName="Opacity" Value=".5" />
                                    </ic:DataTriggerBehavior>
                                </i:Interaction.Behaviors>
                            </TextBlock>
                        </ListViewItem>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.GroupStyle>
                    <GroupStyle HidesIfEmpty="True">
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate x:DataType="helpers:GroupTaskList">
                                <Border AutomationProperties.AccessibilityView="Raw">
                                    <TextBlock Text="{x:Bind Key}" Style="{ThemeResource ListViewHeaderTextBlockStyle}" AutomationProperties.AccessibilityView="Raw" />
                                </Border>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListView.GroupStyle>
                <i:Interaction.Behaviors>
                    <ic:EventTriggerBehavior EventName="SelectionChanged">
                        <ic:InvokeCommandAction Command="{x:Bind ViewModel.SelectionChangedCommand}" />
                    </ic:EventTriggerBehavior>
                    <ic:EventTriggerBehavior EventName="DoubleTapped">
                        <ic:InvokeCommandAction Command="{x:Bind ViewModel.DoubleTappedCommand}" />
                    </ic:EventTriggerBehavior>
                </i:Interaction.Behaviors>
            </ListView>
        </SplitView>
        <Grid Grid.Row="2" Padding="12 0" Height="32" Background="{StaticResource CardBackgroundFillColorSecondaryBrush}" BorderThickness="0 1 0 0" BorderBrush="{StaticResource CardStrokeColorDefaultBrush}" 
              Visibility="{x:Bind ViewModel.AppSettings.ShowStatusBar, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <AppBarSeparator />
                <TextBlock VerticalAlignment="Center" Style="{StaticResource BodyTextBlockStyle}" Padding="5 0" Text="{x:Bind ViewModel.FilterSettings.CurrentPresetFilter, Mode=OneWay, Converter={StaticResource EnumToDescriptionConverter}}">
                    <ToolTipService.ToolTip>
                        <ToolTip Content="{x:Bind ViewModel.FilterSettings.ActiveFilter}" />
                    </ToolTipService.ToolTip>
                </TextBlock>
                <AppBarSeparator />
                <TextBlock VerticalAlignment="Center" Style="{StaticResource BodyTextBlockStyle}" Padding="5 0">
                    <Run>Sort:</Run>
                    <Run Text="{x:Bind ViewModel.ViewSettings.CurrentSort, Mode=OneWay, Converter={StaticResource EnumToDescriptionConverter}}"/>
                </TextBlock>
                <AppBarSeparator />
                <TextBlock VerticalAlignment="Center" Style="{StaticResource BodyTextBlockStyle}" Padding="5 0">
                    <Run>Direction:</Run>
                    <Run Text="{x:Bind ViewModel.ViewSettings.CurrentSortDirection, Mode=OneWay, Converter={StaticResource EnumToDescriptionConverter}}" />
                </TextBlock>
                <AppBarSeparator />
                <TextBlock VerticalAlignment="Center" Style="{ThemeResource BodyTextBlockStyle}" Padding="5 0">
                    <Run>Tasks:</Run>
                    <Run Text="{x:Bind ViewModel.Summary.FilteredCount, Mode=OneWay}" />
                    <Run>of</Run>
                    <Run Text="{x:Bind ViewModel.Summary.TotalCount, Mode=OneWay}" />
                </TextBlock>
                <AppBarSeparator />
                <TextBlock VerticalAlignment="Center" Style="{StaticResource BodyTextBlockStyle}" Padding="5 0">
                    <Run>Incomplete:</Run>
                    <Run Text="{x:Bind ViewModel.Summary.Incomplete, Mode=OneWay}" />
                </TextBlock>
                <AppBarSeparator />
                <TextBlock VerticalAlignment="Center" Style="{StaticResource BodyTextBlockStyle}" Padding="5 0">
                    <Run>Due Today:</Run>          
                    <Run Text="{x:Bind ViewModel.Summary.DueToday, Mode=OneWay}" />
                </TextBlock>
                <AppBarSeparator />
                <TextBlock VerticalAlignment="Center" Style="{StaticResource BodyTextBlockStyle}" Padding="5 0">
                    <Run>Overdue:</Run>
                    <Run Text="{x:Bind ViewModel.Summary.Overdue, Mode=OneWay}" />
                </TextBlock>
                <AppBarSeparator />
                <TextBlock VerticalAlignment="Center" Style="{StaticResource BodyTextBlockStyle}" Padding="5 0">
                    <Run>Hidden:</Run>
                    <Run Text="{x:Bind ViewModel.Summary.Hidden, Mode=OneWay}" />
                </TextBlock>
                <AppBarSeparator />
            </StackPanel>
        </Grid>
    </Grid>
</Page>
